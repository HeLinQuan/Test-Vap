C51 COMPILER V9.00   AD_TDS                                                                04/15/2024 19:40:39 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE AD_TDS
OBJECT MODULE PLACED IN .\Output\AD_TDS.obj
COMPILER INVOKED BY: F:\KEIL5\C51\BIN\C51.EXE ..\..\Application\AD_WORK\AD_TDS.C OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\A
                    -pplication;..\..\User\INC;..\..\Libraries;..\..\Application\Buzzer_Driver;..\..\Application;..\..\Application\DISPLAY;..
                    -\..\Application\TM1652;..\..\Application\WDT;..\..\Application\TIMER;..\..\Application\EEPROM_R_W;..\..\Application\AD_W
                    -ORK;..\..\Application\Fun_Handle;..\..\Application\KEY;..\..\Application\USART) DEBUG OBJECTEXTEND PRINT(.\List\AD_TDS.l
                    -st) OBJECT(.\Output\AD_TDS.obj)

line level    source

   1          #include "define.h"
   2          unsigned int AD_SUM  , AD_DC1 ,AD_DC2;
   3          
   4          unsigned int xdata TEMP_BUFF[10] ; 
   5          
   6          unsigned int xdata TEMP_BUFFYS[50] ;  
   7           
   8          unsigned int TDS_RO , TDS_YS  , TDS_RO_SUM ,  TDS_YS_SUM , TDS_RO_avg=0, TDS_YS_avg=0  ;   // ´¿Ë®TDS  Ô­Ë
             -®TDS
   9          unsigned char TDS_CNT ;
  10          
  11          unsigned char ad_cnt ,ad_cnt2; 
  12          
  13          unsigned int Tim_cnt;
  14          
  15          void TDS_YS_read(void)
  16          {
  17   1                unsigned char  j , i ; 
  18   1                unsigned int temp_wd2 ; 
  19   1                unsigned int temp_tt ;  
  20   1                TDS_YS_ADD ;      //IOÕýÏòAD×ª»»
  21   1                for(i=0 ;i<10 ;i++)
  22   1                {
  23   2                                      ADCC1 = 0x00;                                           //Ñ¡ÔñÍâ²¿Í¨µÀ0
  24   2                                      ADCC0 |= 0x40;                                  //Æô¶¯ADC×ª»»
  25   2                                      while(!(ADCC0&0x20));           //µÈ´ýADC×ª»»½áÊø
  26   2                                      ADCC0 &=~ 0x20;                                 //Çå³ý±êÖ¾Î»    
  27   2                                      AD_SUM+= ADCR;                      //»ñÈ¡ADCµÄÖµ       
  28   2          }                   
  29   1                AD_DC1 = AD_SUM/100 ; 
  30   1                AD_SUM = 0 ;  
  31   1                      TDS_YS_DOWN ;     //IO·´Ïò×ª»»  
  32   1          for(i=0 ;i<10 ;i++)
  33   1                {
  34   2                                      ADCC1 = 0x00;                                           //Ñ¡ÔñÍâ²¿Í¨µÀ0
  35   2                                      ADCC0 |= 0x40;                                  //Æô¶¯ADC×ª»»
  36   2                                      while(!(ADCC0&0x20));           //µÈ´ýADC×ª»»½áÊø
  37   2                                      ADCC0 &=~ 0x20;                                 //Çå³ý±êÖ¾Î»    
  38   2                                      AD_SUM+= ADCR;                      //»ñÈ¡ADCµÄÖµ       
  39   2          }                   
  40   1                AD_DC2 = AD_SUM/100 ; 
  41   1                AD_SUM = 0 ;  
  42   1          TDS_YS_STOP;     //IOÍ£Ö¹
  43   1                      
  44   1                      TEMP_BUFFYS[ad_cnt2]     = AD_DC1 ; //320ms ¸üÐÂÒ»´Î    ÕæÊµÎÂ¶ÈÖµ      
  45   1                      if(++ad_cnt2>10)
  46   1                      {
  47   2                                      ad_cnt2 = 0 ;   
  48   2                                      for(j=0 ;j<9 ; j++)    
  49   2                                      {
  50   3                                                                      for(i= 0 ; i<(10-j) ; i++)
C51 COMPILER V9.00   AD_TDS                                                                04/15/2024 19:40:39 PAGE 2   

  51   3                                                                      {
  52   4                                                                                              if(TEMP_BUFFYS[i]>TEMP_BUFFYS[i+1])
  53   4                                                                                              {
  54   5                                                                                                              temp_wd2 = TEMP_BUFFYS[i] ; 
  55   5                                                                                                              TEMP_BUFFYS[i]=TEMP_BUFFYS[i+1] ;
  56   5                                                                                                              TEMP_BUFFYS[i+1] = temp_wd2  ;
  57   5                                                                                              }
  58   4                                                                      }
  59   3                                      }   
  60   2                                      for(i=2 ; i<9 ; i++)
  61   2                                      {
  62   3                                                      temp_tt+= TEMP_BUFFYS[i] ;
  63   3                                      }
  64   2                                      TDS_YS=(temp_tt/8)*1.25 ;
  65   2                                      if(TDS_YS<30)
  66   2                                      {
  67   3                                                TDS_YS=TDS_YS;
  68   3                                      }
  69   2                                      else if(TDS_YS<45)
  70   2                                      {
  71   3                                                TDS_YS=TDS_YS+TDS_YS*0.15 ;
  72   3                                      }
  73   2                                else if(TDS_YS<60)
  74   2                                      {
  75   3                                                TDS_YS=TDS_YS+TDS_YS*0.2 ;
  76   3                                      }
  77   2                                      else if(TDS_YS<75)
  78   2                                      {
  79   3                                                TDS_YS=TDS_YS+TDS_YS*0.25 ;
  80   3                                      }
  81   2                                      else if(TDS_YS<90)
  82   2                                      {
  83   3                                                TDS_YS=TDS_YS+TDS_YS*0.3 ;
  84   3                                      }       
  85   2                                      else if(TDS_YS<105)
  86   2                                      {
  87   3                                                TDS_YS=TDS_YS+TDS_YS*0.35 ;
  88   3                                      }
  89   2                                      else if(TDS_YS<120)
  90   2                                      {
  91   3                                                TDS_YS=TDS_YS+TDS_YS*0.4 ;
  92   3                                      }       
  93   2                                      else if(TDS_YS<135)
  94   2                                      {
  95   3                                                TDS_YS=TDS_YS+TDS_YS*0.45;
  96   3                                      }
  97   2                                      else if(TDS_YS<150)
  98   2                                      {
  99   3                                                TDS_YS=TDS_YS+TDS_YS*0.5 ;
 100   3                                      }       
 101   2                                      else if(TDS_YS<165)
 102   2                                      {
 103   3                                                TDS_YS=TDS_YS+TDS_YS*0.55 ;
 104   3                                      }
 105   2                                      else if(TDS_YS<180)
 106   2                                      {
 107   3                                                TDS_YS=TDS_YS+TDS_YS*0.6 ;
 108   3                                      }       
 109   2                                      else if(TDS_YS<195)
 110   2                                      {
 111   3                                                TDS_YS=TDS_YS+TDS_YS*0.7 ;
 112   3                                      }
C51 COMPILER V9.00   AD_TDS                                                                04/15/2024 19:40:39 PAGE 3   

 113   2                                else if(TDS_YS<210)
 114   2                                      {
 115   3                                                TDS_YS=TDS_YS+TDS_YS*0.8 ;
 116   3                                      }       
 117   2                                      else if(TDS_YS<225)
 118   2                                      {
 119   3                                                TDS_YS=TDS_YS+TDS_YS*0.85 ;
 120   3                                      }
 121   2                                      else if(TDS_YS<240)
 122   2                                      {
 123   3                                                TDS_YS=TDS_YS+TDS_YS*0.9 ;
 124   3                                      }       
 125   2                                      else if(TDS_YS<250)
 126   2                                      {
 127   3                                                TDS_YS=TDS_YS+TDS_YS*1.0 ;
 128   3                                      }
 129   2                                      else if(TDS_YS<260)
 130   2                                      {
 131   3                                                TDS_YS=TDS_YS+TDS_YS*1.1 ;
 132   3                                      }
 133   2                                      else if(TDS_YS<270)
 134   2                                      {
 135   3                                                TDS_YS=TDS_YS+TDS_YS*1.2 ;
 136   3                                      }
 137   2                                      else if(TDS_YS<280)
 138   2                                      {
 139   3                                                TDS_YS=TDS_YS+TDS_YS*1.3 ;
 140   3                                      }       
 141   2                                      else if(TDS_YS<285)
 142   2                                      {
 143   3                                                TDS_YS=TDS_YS+TDS_YS*1.4 ;
 144   3                                      }
 145   2                                      else if(TDS_YS<290)
 146   2                                      {
 147   3                                                TDS_YS=TDS_YS+TDS_YS*1.5 ;
 148   3                                      }       
 149   2                                      else if(TDS_YS<295)
 150   2                                      {
 151   3                                                TDS_YS=TDS_YS+TDS_YS*1.65 ;
 152   3                                      }
 153   2                                      else if(TDS_YS<300)
 154   2                                      {
 155   3                                                TDS_YS=TDS_YS+TDS_YS*1.8 ;
 156   3                                      }
 157   2                                      else if(TDS_YS<305)
 158   2                                      {
 159   3                                                TDS_YS=TDS_YS+TDS_YS*1.95 ;
 160   3                                      }
 161   2                                      else if(TDS_YS<310)
 162   2                                      {
 163   3                                                TDS_YS=TDS_YS+TDS_YS*2.2 ;
 164   3                                      }
 165   2                                      else if(TDS_YS<315)
 166   2                                      {
 167   3                                                TDS_YS=TDS_YS+TDS_YS*2.35 ;
 168   3                                      }
 169   2                                      else if(TDS_YS<320)
 170   2                                      {
 171   3                                                TDS_YS=TDS_YS+TDS_YS*2.5 ;
 172   3                                      }
 173   2                                      else if(TDS_YS<325)
 174   2                                      {
C51 COMPILER V9.00   AD_TDS                                                                04/15/2024 19:40:39 PAGE 4   

 175   3                                                TDS_YS=TDS_YS+TDS_YS*2.8 ;
 176   3                                      }
 177   2                                      else //if(TDS_YS<700)
 178   2                                      {
 179   3                                                TDS_YS=TDS_YS+TDS_YS*3;
 180   3                                      }       
 181   2                                      if(TDS_YS>=999) TDS_YS=999;
 182   2                                      temp_tt = 0 ;    
 183   2                      } 
 184   1      }
 185                  
 186          
 187          void TDS_RO_read(void)
 188          {
 189   1                unsigned char  j , i ; 
 190   1                unsigned int temp_wd ; 
 191   1                unsigned int temp_ttt ;  
 192   1                TDS_RO_ADD ;      //IOÕýÏòAD×ª»»
 193   1                for(i=0 ;i<10 ;i++)
 194   1                {
 195   2                                      ADCC1 = 0x03;                                           //Ñ¡ÔñÍâ²¿Í¨µÀ3
 196   2                                      ADCC0 |= 0x40;                                  //Æô¶¯ADC×ª»»
 197   2                                      while(!(ADCC0&0x20));           //µÈ´ýADC×ª»»½áÊø
 198   2                                      ADCC0 &=~ 0x20;                                 //Çå³ý±êÖ¾Î»    
 199   2                                      AD_SUM+= ADCR;                      //»ñÈ¡ADCµÄÖµ       
 200   2          }                   
 201   1                AD_DC1 = AD_SUM/100 ; 
 202   1                AD_SUM = 0 ;  
 203   1                      TDS_RO_DOWN ;     //IO·´Ïò×ª»»  
 204   1          for(i=0 ;i<10 ;i++)
 205   1                {
 206   2                                      ADCC1 = 0x03;                                           //Ñ¡ÔñÍâ²¿Í¨µÀ6
 207   2                                      ADCC0 |= 0x40;                                  //Æô¶¯ADC×ª»»
 208   2                                      while(!(ADCC0&0x20));           //µÈ´ýADC×ª»»½áÊø
 209   2                                      ADCC0 &=~ 0x20;                                 //Çå³ý±êÖ¾Î»    
 210   2                                      AD_SUM+= ADCR;                      //»ñÈ¡ADCµÄÖµ       
 211   2          }                   
 212   1                AD_DC2 = AD_SUM/10 ; 
 213   1                AD_SUM = 0 ;  
 214   1          TDS_RO_STOP;     //IOÍ£Ö¹
 215   1                      
 216   1                      TEMP_BUFF[ad_cnt]        = AD_DC1 ; //320ms ¸üÐÂÒ»´Î    ÕæÊµÎÂ¶ÈÖµ      
 217   1                      if(++ad_cnt>10)
 218   1                      {
 219   2                                      ad_cnt = 0 ;    
 220   2                                      for(j=0 ;j<9 ; j++)    
 221   2                                      {
 222   3                                                                      for(i= 0 ; i<(10-j) ; i++)
 223   3                                                                      {
 224   4                                                                                              if(TEMP_BUFF[i]>TEMP_BUFF[i+1])
 225   4                                                                                              {
 226   5                                                                                                              temp_wd = TEMP_BUFF[i] ; 
 227   5                                                                                                              TEMP_BUFF[i]=TEMP_BUFF[i+1] ;
 228   5                                                                                                              TEMP_BUFF[i+1] = temp_wd  ;
 229   5                                                                                              }
 230   4                                                                      }
 231   3                                      }   
 232   2                                      for(i=2 ; i<10 ; i++)
 233   2                                      {
 234   3                                                                      temp_ttt+= TEMP_BUFF[i] ;
 235   3                                      }
 236   2                                      TDS_RO=((temp_ttt/8)*1.1) ;
C51 COMPILER V9.00   AD_TDS                                                                04/15/2024 19:40:39 PAGE 5   

 237   2                                      if(TDS_RO>=99)
 238   2                                      {
 239   3                                                TDS_RO = 99 ; 
 240   3                                      }
 241   2                                      temp_ttt = 0 ;   
 242   2                      } 
 243   1      }
 244          
 245          
 246          
 247          void Check_Leak(void)//Â©Ë®¼ì²â 10msµ÷ÓÃÒ»´Î
 248          {
 249   1      
 250   1              unsigned char  wait_cnt ;   
 251   1          
 252   1              ADCC0  = 0x80;                                  //´ò¿ªADC×ª»»µçÔ´
 253   1      
 254   1              ADCC1  = 0x03;                            //Ñ¡ÔñadÍ¨µÀ3
 255   1              delay_us(20);                                           //ÑÓÊ±20us£¬È·±£ADCÏµÍ³ÎÈ¶¨  
 256   1              ADCC0 |= 0x40;                            //Æô¶¯ADC×ª»»
 257   1              wait_cnt = 0 ;
 258   1              while(!(ADCC0&0x20))
 259   1              {
 260   2                   if(++wait_cnt>=50) break; 
 261   2              }               //µÈ´ýADC×ª»»½áÊø
 262   1              ADCC0 &=~ 0x20;                           //Çå³ý±êÖ¾Î»  
 263   1              AD_SUM+= ADCR;                      //»ñÈ¡ADCµÄÖµ       
 264   1              ADCC0 &= 0x7f;  
 265   1              
 266   1                      if(ADCR<3000)
 267   1                      {
 268   2                                      if(++Tim_cnt>=500)
 269   2                                      {
 270   3                                                      Tim_cnt=500;
 271   3                                                      F_LOUSHUI=1;
 272   3                              if(F_BEEP1 == 0)
 273   3                              {
 274   4                                  F_BEEP1 = 1;
 275   4                                  speek_duo(150,50,5);
 276   4                              }
 277   3                              
 278   3                                      }
 279   2                                      
 280   2                      }
 281   1                      else
 282   1                      {
 283   2                              Tim_cnt=0;
 284   2                  F_BEEP1 = 0;
 285   2                      }
 286   1      
 287   1                      
 288   1      }
 289          
 290          /*********************************************
 291          TDS ¼ì²â   1ms É¨Ãè 1´Î 
 292          //  TDS ¼ì²â 
 293          **********************************************/
 294          //bit F_ZHISHUI ;
 295          //void TDS_CHECK(void)
 296          //{
 297          //        if(F_1MS==1)   //1MS µ÷ÓÃÒ»´Î 
 298          //              { 
C51 COMPILER V9.00   AD_TDS                                                                04/15/2024 19:40:39 PAGE 6   

 299          //                       F_1MS = 0 ; 
 300          //       if(F_ZHISHUI==1)  //ÖÆË®±êÖ¾                   
 301          //                       {
 302          //                                if(TDS_CHECK_SEC>=15)
 303          //                                      {
 304          //                                                      TDS_YS_read() ;   //¶ÁÔ­Ë®TDS            
 305          //                                                      TDS_RO_read() ;   //¶ÁÈ¡´¿Ë® TDS 
 306          //                                      }
 307          //                       }
 308          //                       else
 309          //                       { 
 310          //                                 TDS_YS_STOP;     //IOÍ£Ö¹ 
 311          //                                 TDS_RO_STOP;     //IOÍ£Ö¹
 312          //                       }
 313          //              }       
 314          //        if(F_500MS==1)
 315          //              {          
 316          //                              F_500MS = 0 ;  
 317          //                              TDS_RO_SUM += TDS_RO ;
 318          //                              TDS_YS_SUM += TDS_YS ;
 319          //                              if(++TDS_CNT>=10)
 320          //                              {
 321          //                                                        TDS_CNT = 0  ; 
 322          //                                            TDS_RO_avg = TDS_RO_SUM/10 ;
 323          //                                            TDS_YS_avg = TDS_YS_SUM/10 ;
 324          //                                                        TDS_RO_SUM = 0 ;
 325          //                                            TDS_YS_SUM = 0 ;
 326          //                              }
 327          //               }              
 328          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1718    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    120    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
