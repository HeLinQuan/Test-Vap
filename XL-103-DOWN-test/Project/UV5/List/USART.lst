C51 COMPILER V9.00   USART                                                                 04/15/2024 19:40:39 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE USART
OBJECT MODULE PLACED IN .\Output\USART.obj
COMPILER INVOKED BY: F:\KEIL5\C51\BIN\C51.EXE ..\..\Application\USART\USART.C OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Appl
                    -ication;..\..\User\INC;..\..\Libraries;..\..\Application\Buzzer_Driver;..\..\Application;..\..\Application\DISPLAY;..\..
                    -\Application\TM1652;..\..\Application\WDT;..\..\Application\TIMER;..\..\Application\EEPROM_R_W;..\..\Application\AD_WORK
                    -;..\..\Application\Fun_Handle;..\..\Application\KEY;..\..\Application\USART) DEBUG OBJECTEXTEND PRINT(.\List\USART.lst) 
                    -OBJECT(.\Output\USART.obj)

line level    source

   1          #include "define.h"
   2          unsigned char xdata SendOutData[50] = {0x55,0xAA,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
   3          unsigned char xdata ReceivebeBuffer[50] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};            //接收缓存器
   4          unsigned char Receiveflag = 0;                                                          //接收标志位
   5          unsigned char Receietime = 0;                                                                   //接收时间
   6          unsigned char Receivenum = 0;                                                                   //接收数目
   7          
   8          bit F_WORK;
   9          unsigned char F_BUZ;
  10          
  11          volatile unsigned char xdata ReceiveLimitFlag = 0;                                                      //接收限制标志位
  12          volatile unsigned int xdata ReceiveLimitCount = 0;                                                      //接收限制计数
  13          
  14          
  15          unsigned char WENBIAO_value ,START_value  , WORK_value  ,YURE_value; 
  16          
  17          
  18          //unsigned int  xdata KAOLU_temp,KEY_VALUE,F_OVER;
  19          //unsigned int  xdata F_30min,beep=0,beep1=0,beep2=0;
  20          
  21          
  22          void UartInit()                 //uart初始化
  23          {
  24   1              /**********************************UART配置初始化**************************************/
  25   1              //P1 = 0X00;
  26   1              //speek_dan0(80);
  27   1              
  28   1              P2M2 =  GPIO_In_PU;    // 
  29   1              P2M0 =  GPIO_Out_PP;    //
  30   1      
  31   1              TXD_MAP = 0x20;                                                 //TXD映射P34
  32   1              RXD_MAP = 0x22;                                                   //RXD映射P35  
  33   1              
  34   1      //      P2M0 =  GPIO_In_PU;    //  RXD
  35   1      //      P2M2 =  GPIO_Out_PP;    // TXD
  36   1      //      
  37   1      //      TXD_MAP = 0x22;                                                 //TXD映射P12
  38   1      //      RXD_MAP = 0x20;                                                 //RXD映射P11
  39   1          
  40   1      //    P1M6 =  GPIO_In_PU;      //  RXD      设置为上拉输入
  41   1      //      P1M7 =  GPIO_Out_PP;    // TXD      设置为推挽输出
  42   1      //      
  43   1      //      TXD_MAP = 0x17;                                                 //TXD映射P
  44   1      //      RXD_MAP = 0x16;                                                 //RXD映射P
  45   1              
  46   1      //      P3M4 =  GPIO_In_PU;    //
  47   1      //      P3M5 = GPIO_Out_PP;    //       
  48   1      //      RXD_MAP = 0x34;                                                   //RXD映射P35  
  49   1      //      TXD_MAP = 0x35;                                                 //TXD映射P34
  50   1      
  51   1      
C51 COMPILER V9.00   USART                                                                 04/15/2024 19:40:39 PAGE 2   

  52   1      
  53   1      
  54   1              
  55   1              T4CON = 0x06;                                                           //T4工作模式：UART1波特率发生器
  56   1              //波特率计算
  57   1              //波特率 = 1/16 * (T4时钟源频率 / 定时器4预分频比) / (65536 - 0xFF98)
  58   1              //       = 1/16 * ((16000000 / 1) / 104)
  59   1              //               = 9615.38(误差0.16%)
  60   1      
  61   1              //波特率9600
  62   1              //反推初值 = (65536 - ((T4时钟源频率 / 定时器4预分频比) * (1 / 16)) / 波特率)
  63   1              //                 = (65536 - (16000000 * (1 / 16) / 9600))
  64   1              //                 = (65536 - 104.167)
  65   1              //         = FF98
  66   1          TH4 = 0xFF;
  67   1              TL4 = 0x98;                                                     //波特率9600
  68   1              SCON2 = 0x02;                                           //8位UART，波特率可变
  69   1              SCON = 0x10;                                            //允许串行接收
  70   1              IE |= 0x10;                                                     //使能串口中断
  71   1              EA = 1;                                                           //使能总中断
  72   1      }
  73          
  74          
  75          //发送一个字节
  76          void UART_SendChar(unsigned char UART_da)
  77          {
  78   1                SBUF = UART_da;                                               //发送8位串口数据
  79   1                      while(!(SCON & 0x02));
  80   1                      SCON &=~ 0x02;                                          //清除发送中断标志位
  81   1      }
  82          
  83          void  UART_SendData(  unsigned char  len0)
  84          {
  85   1          unsigned char i;
  86   1                      for(i=0;i<len0;i++)
  87   1                      {
  88   2                                      UART_SendChar(SendOutData[i]);  
  89   2                      }
  90   1      }
  91          
  92          
  93           void JudgeOneStringEnd()                                       //判断一帧数据结束
  94          {
  95   1              if(Receiveflag == 1 && Receietime == 6)         //3             
  96   1              { 
  97   2                              JudgeTheReceiveData(ReceivebeBuffer,Receivenum);
  98   2                              ClearBuffer();
  99   2              }
 100   1      }
 101          
 102          
 103          //Status: 4(已连上路由器且连接到云端)
 104          //    55 AA 00 03 00 01 04 07
 105          //接收模块发送的心跳信息             [2022/08/19 17:57:37.95]
 106          //    55 AA 00 00 00 00 FF
 107          
 108          //55 AA 00 08 00 00 07
 109          
 110          unsigned char JudgeTheReceiveData(unsigned char *da,unsigned char num)                  //判断接收的数据是否正确
 111          {
 112   1                      unsigned char  num_data, i ;
 113   1                num_data = num;
C51 COMPILER V9.00   USART                                                                 04/15/2024 19:40:39 PAGE 3   

 114   1                      num_data = 0 ;
 115   1                      for(i=2 ; i<11 ; i++)
 116   1                      {
 117   2                               num_data += *(da+i);
 118   2                      }
 119   1              
 120   1                      if((*da == 0X55)&&(*(da+1)==0XAA))   //头码、校验码正确 (num_data == *(da+11))&&(*(da+1) == 0XAA)
 121   1                      {
 122   2                        F_FilterSet= (*(da+2));   //串口接收到滤芯复位信息
 123   2                Filter_SetMode = (*(da+3));
 124   2                TDS_RO_avg = (*(da+5));//(((*(da+4))*256)+((*(da+5))))
 125   2                F_Power = (*(da+6));
 126   2                F_FilterOutTime = (*(da+7));
 127   2                delay_ms(3);
 128   2                  //speek_dan0(30);
 129   2                        return Success;
 130   2                      }
 131   1                      else
 132   1                      {
 133   2                  
 134   2                               return Fail;
 135   2                      }
 136   1      }
 137          
 138          void ClearBuffer()                                                                                                      //清空缓存器
 139          {
 140   1              unsigned char i = 0;
 141   1              for(i=0; i<50; i++)
 142   1              {       
 143   2                      ReceivebeBuffer[i] = 0;
 144   2              }
 145   1              Receiveflag = 0;
 146   1              Receietime  = 0;
 147   1              Receivenum  = 0;
 148   1      }
 149          void DIS_TO_MAIN_SEND(void)
 150          {
 151   1                unsigned char x , num_data ; 
 152   1                //ERR_CODE = 1;
 153   1          //55 AA 03 07 00 08 09 02 00 04 00 00 00 0F 2F  
 154   1                      SendOutData[0] = 0X55 ; 
 155   1                      SendOutData[1] = 0XAA ;                                                                         
 156   1                  SendOutData[2] = F_FilterSet ; 
 157   1                      SendOutData[3] = Filter_SetMode ; 
 158   1                      SendOutData[4] = 999/256;
 159   1                      SendOutData[5] = 999%256;
 160   1                      SendOutData[6] = F_Power ; 
 161   1                      SendOutData[7] = F_FilterOutTime ;
 162   1                      SendOutData[8] = 0X00 ;
 163   1                  SendOutData[9] = 0X00 ;
 164   1                      SendOutData[10]= 0X00 ;
 165   1                      num_data = 0 ; 
 166   1                      for(x=2 ; x<11 ; x++)
 167   1                      {
 168   2                                      num_data += SendOutData[x] ;
 169   2                      }
 170   1                      SendOutData[11]= num_data ; 
 171   1                      UART_SendData(12) ;
 172   1      }
 173          
 174          
 175          
C51 COMPILER V9.00   USART                                                                 04/15/2024 19:40:39 PAGE 4   

 176          
 177          
 178          
 179          
 180          
 181          /*
 182          
 183          
 184          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    319    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    103    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
