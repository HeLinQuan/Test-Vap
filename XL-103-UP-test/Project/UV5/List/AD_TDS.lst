C51 COMPILER V9.00   AD_TDS                                                                04/16/2024 09:50:47 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE AD_TDS
OBJECT MODULE PLACED IN .\Output\AD_TDS.obj
COMPILER INVOKED BY: F:\KEIL5\C51\BIN\C51.EXE ..\..\Application\AD_WORK\AD_TDS.C OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\A
                    -pplication;..\..\User\INC;..\..\Libraries;..\..\Application\Buzzer_Driver;..\..\Application;..\..\Application\DISPLAY;..
                    -\..\Application\TM1652;..\..\Application\WDT;..\..\Application\TIMER;..\..\Application\EEPROM_R_W;..\..\Application\AD_W
                    -ORK;..\..\Application\Fun_Handle;..\..\Application\KEY;..\..\Application\USART) DEBUG OBJECTEXTEND PRINT(.\List\AD_TDS.l
                    -st) OBJECT(.\Output\AD_TDS.obj)

line level    source

   1          #include "define.h"
   2          unsigned char xdata ERR_CODE; 
   3          
   4          unsigned int TDS_RO=0 , TDS_YS=0  , TDS_RO_SUM=0 ,  TDS_YS_SUM=0 , TDS_RO_avg=0, TDS_YS_avg=0  ;   // 纯水
             -TDS  原水TDS
   5          
   6          
   7          unsigned int AD_SUM  , AD_DC1 ,AD_DC2;
   8          
   9          unsigned int xdata TEMP_BUFF[10] ; 
  10          
  11          unsigned int xdata TEMP_BUFFYS[20] ;  
  12          
  13          unsigned char ad_cnt ,ad_cnt2; 
  14          void TDS_YS_read(void)
  15          {
  16   1                unsigned char  j , i ; 
  17   1                unsigned int temp_wd2 ; 
  18   1                unsigned int temp_tt ;  
  19   1                TDS_YS_ADD ;      //IO正向AD转换
  20   1                for(i=0 ;i<10 ;i++)
  21   1                {
  22   2                                      ADCC1 = 0x02;                                           //选择外部通道 2
  23   2                                      ADCC0 |= 0x40;                                  //启动ADC转换
  24   2                                      while(!(ADCC0&0x20));           //等待ADC转换结束
  25   2                                      ADCC0 &=~ 0x20;                                 //清除标志位    
  26   2                                      AD_SUM+= ADCR;                      //获取ADC的值       
  27   2          }                   
  28   1                AD_DC1 = AD_SUM/100 ; 
  29   1                AD_SUM = 0 ;  
  30   1                      TDS_YS_DOWN ;     //IO反向转换  
  31   1          for(i=0 ;i<10 ;i++)
  32   1                {
  33   2                                      ADCC1 = 0x02;                                           //选择外部通道2
  34   2                                      ADCC0 |= 0x40;                                  //启动ADC转换
  35   2                                      while(!(ADCC0&0x20));           //等待ADC转换结束
  36   2                                      ADCC0 &=~ 0x20;                                 //清除标志位    
  37   2                                      AD_SUM+= ADCR;                      //获取ADC的值       
  38   2          }                   
  39   1                AD_DC2 = AD_SUM/100 ; 
  40   1                AD_SUM = 0 ; 
  41   1      
  42   1                      
  43   1          TDS_YS_STOP;     //IO停止
  44   1                      
  45   1                      TEMP_BUFFYS[ad_cnt2]     = AD_DC1 ; //320ms 更新一次    真实温度值      
  46   1                      if(++ad_cnt2>10)
  47   1                      {
  48   2                                      ad_cnt2 = 0 ;   
  49   2                                      for(j=0 ;j<9 ; j++)    
  50   2                                      {
C51 COMPILER V9.00   AD_TDS                                                                04/16/2024 09:50:47 PAGE 2   

  51   3                                                                      for(i= 0 ; i<(10-j) ; i++)
  52   3                                                                      {
  53   4                                                                                              if(TEMP_BUFFYS[i]>TEMP_BUFFYS[i+1])
  54   4                                                                                              {
  55   5                                                                                                              temp_wd2 = TEMP_BUFFYS[i] ; 
  56   5                                                                                                              TEMP_BUFFYS[i]=TEMP_BUFFYS[i+1] ;
  57   5                                                                                                              TEMP_BUFFYS[i+1] = temp_wd2  ;
  58   5                                                                                              }
  59   4                                                                      }
  60   3                                      }   
  61   2                                      for(i=2 ; i<9 ; i++)
  62   2                                      {
  63   3                                                      temp_tt+= TEMP_BUFFYS[i] ;
  64   3                                      }
  65   2                                      TDS_YS=(temp_tt/8)*1.25 ;
  66   2                                      if(TDS_YS<30)
  67   2                                      {
  68   3                                                TDS_YS=TDS_YS;
  69   3                                      }
  70   2                                      else if(TDS_YS<45)
  71   2                                      {
  72   3                                                TDS_YS=TDS_YS+TDS_YS*0.15 ;
  73   3                                      }
  74   2                                else if(TDS_YS<60)
  75   2                                      {
  76   3                                                TDS_YS=TDS_YS+TDS_YS*0.2 ;
  77   3                                      }
  78   2                                      else if(TDS_YS<75)
  79   2                                      {
  80   3                                                TDS_YS=TDS_YS+TDS_YS*0.25 ;
  81   3                                      }
  82   2                                      else if(TDS_YS<90)
  83   2                                      {
  84   3                                                TDS_YS=TDS_YS+TDS_YS*0.3 ;
  85   3                                      }       
  86   2                                      else if(TDS_YS<105)
  87   2                                      {
  88   3                                                TDS_YS=TDS_YS+TDS_YS*0.35 ;
  89   3                                      }
  90   2                                      else if(TDS_YS<120)
  91   2                                      {
  92   3                                                TDS_YS=TDS_YS+TDS_YS*0.4 ;
  93   3                                      }       
  94   2                                      else if(TDS_YS<135)
  95   2                                      {
  96   3                                                TDS_YS=TDS_YS+TDS_YS*0.45;
  97   3                                      }
  98   2                                      else if(TDS_YS<150)
  99   2                                      {
 100   3                                                TDS_YS=TDS_YS+TDS_YS*0.5 ;
 101   3                                      }       
 102   2                                      else if(TDS_YS<165)
 103   2                                      {
 104   3                                                TDS_YS=TDS_YS+TDS_YS*0.55 ;
 105   3                                      }
 106   2                                      else if(TDS_YS<180)
 107   2                                      {
 108   3                                                TDS_YS=TDS_YS+TDS_YS*0.6 ;
 109   3                                      }       
 110   2                                      else if(TDS_YS<195)
 111   2                                      {
 112   3                                                TDS_YS=TDS_YS+TDS_YS*0.7 ;
C51 COMPILER V9.00   AD_TDS                                                                04/16/2024 09:50:47 PAGE 3   

 113   3                                      }
 114   2                                else if(TDS_YS<210)
 115   2                                      {
 116   3                                                TDS_YS=TDS_YS+TDS_YS*0.8 ;
 117   3                                      }       
 118   2                                      else if(TDS_YS<225)
 119   2                                      {
 120   3                                                TDS_YS=TDS_YS+TDS_YS*0.85 ;
 121   3                                      }
 122   2                                      else if(TDS_YS<240)
 123   2                                      {
 124   3                                                TDS_YS=TDS_YS+TDS_YS*0.9 ;
 125   3                                      }       
 126   2                                      else if(TDS_YS<250)
 127   2                                      {
 128   3                                                TDS_YS=TDS_YS+TDS_YS*1.0 ;
 129   3                                      }
 130   2                                      else if(TDS_YS<260)
 131   2                                      {
 132   3                                                TDS_YS=TDS_YS+TDS_YS*1.1 ;
 133   3                                      }
 134   2                                      else if(TDS_YS<270)
 135   2                                      {
 136   3                                                TDS_YS=TDS_YS+TDS_YS*1.2 ;
 137   3                                      }
 138   2                                      else if(TDS_YS<280)
 139   2                                      {
 140   3                                                TDS_YS=TDS_YS+TDS_YS*1.3 ;
 141   3                                      }       
 142   2                                      else if(TDS_YS<285)
 143   2                                      {
 144   3                                                TDS_YS=TDS_YS+TDS_YS*1.4 ;
 145   3                                      }
 146   2                                      else if(TDS_YS<290)
 147   2                                      {
 148   3                                                TDS_YS=TDS_YS+TDS_YS*1.5 ;
 149   3                                      }       
 150   2                                      else if(TDS_YS<295)
 151   2                                      {
 152   3                                                TDS_YS=TDS_YS+TDS_YS*1.65 ;
 153   3                                      }
 154   2                                      else if(TDS_YS<300)
 155   2                                      {
 156   3                                                TDS_YS=TDS_YS+TDS_YS*1.8 ;
 157   3                                      }
 158   2                                      else if(TDS_YS<305)
 159   2                                      {
 160   3                                                TDS_YS=TDS_YS+TDS_YS*1.95 ;
 161   3                                      }
 162   2                                      else if(TDS_YS<310)
 163   2                                      {
 164   3                                                TDS_YS=TDS_YS+TDS_YS*2.2 ;
 165   3                                      }
 166   2                                      else if(TDS_YS<315)
 167   2                                      {
 168   3                                                TDS_YS=TDS_YS+TDS_YS*2.35 ;
 169   3                                      }
 170   2                                      else if(TDS_YS<320)
 171   2                                      {
 172   3                                                TDS_YS=TDS_YS+TDS_YS*2.5 ;
 173   3                                      }
 174   2                                      else if(TDS_YS<325)
C51 COMPILER V9.00   AD_TDS                                                                04/16/2024 09:50:47 PAGE 4   

 175   2                                      {
 176   3                                                TDS_YS=TDS_YS+TDS_YS*2.8 ;
 177   3                                      }
 178   2                                      else //if(TDS_YS<700)
 179   2                                      {
 180   3                                                TDS_YS=TDS_YS+TDS_YS*3;
 181   3                                      }       
 182   2                                      if(TDS_YS>=999) TDS_YS=999;
 183   2                                      temp_tt = 0 ;    
 184   2                      } 
 185   1      }
 186                  
 187          
 188          void TDS_RO_read(void)
 189          {
 190   1                unsigned char  j , i ; 
 191   1                unsigned int temp_wd ; 
 192   1                unsigned int temp_ttt ;  
 193   1                TDS_RO_ADD ;      //IO正向AD转换
 194   1                for(i=0 ;i<10 ;i++)
 195   1                {
 196   2                                      ADCC1 = 0x0B;                                           //选择外部通道11
 197   2                                      ADCC0 |= 0x40;                                  //启动ADC转换
 198   2                                      while(!(ADCC0&0x20));           //等待ADC转换结束
 199   2                                      ADCC0 &=~ 0x20;                                 //清除标志位    
 200   2                                      AD_SUM+= ADCR;                      //获取ADC的值       
 201   2          }                   
 202   1                AD_DC1 = AD_SUM/100 ; 
 203   1                AD_SUM = 0 ;  
 204   1                      TDS_RO_DOWN ;     //IO反向转换  
 205   1          for(i=0 ;i<10 ;i++)
 206   1                {
 207   2                                      ADCC1 = 0x0B;                                           //选择外部通道11
 208   2                                      ADCC0 |= 0x40;                                  //启动ADC转换
 209   2                                      while(!(ADCC0&0x20));           //等待ADC转换结束
 210   2                                      ADCC0 &=~ 0x20;                                 //清除标志位    
 211   2                                      AD_SUM+= ADCR;                      //获取ADC的值       
 212   2          }                   
 213   1                AD_DC2 = AD_SUM/10 ; 
 214   1                AD_SUM = 0 ;  
 215   1          TDS_RO_STOP;     //IO停止
 216   1                      
 217   1                      TEMP_BUFF[ad_cnt]        = AD_DC1 ; //320ms 更新一次    真实温度值      
 218   1                      if(++ad_cnt>10)
 219   1                      {
 220   2                                      ad_cnt = 0 ;    
 221   2                                      for(j=0 ;j<9 ; j++)    
 222   2                                      {
 223   3                                                                      for(i= 0 ; i<(10-j) ; i++)
 224   3                                                                      {
 225   4                                                                                              if(TEMP_BUFF[i]>TEMP_BUFF[i+1])
 226   4                                                                                              {
 227   5                                                                                                              temp_wd = TEMP_BUFF[i] ; 
 228   5                                                                                                              TEMP_BUFF[i]=TEMP_BUFF[i+1] ;
 229   5                                                                                                              TEMP_BUFF[i+1] = temp_wd  ;
 230   5                                                                                              }
 231   4                                                                      }
 232   3                                      }   
 233   2                                      for(i=2 ; i<10 ; i++)
 234   2                                      {
 235   3                                                                      temp_ttt+= TEMP_BUFF[i] ;
 236   3                                      }
C51 COMPILER V9.00   AD_TDS                                                                04/16/2024 09:50:47 PAGE 5   

 237   2                                      TDS_RO=((temp_ttt/8)*1.1) ;
 238   2                                      if(TDS_RO>=99)
 239   2                                      {
 240   3                                                TDS_RO = 99 ; 
 241   3                                      }
 242   2                                      temp_ttt = 0 ;   
 243   2                      } 
 244   1      }                 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1614    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     61    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
