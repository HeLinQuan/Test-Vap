C51 COMPILER V9.00   HC89F30XC_ISR                                                         04/18/2024 20:31:02 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE HC89F30XC_ISR
OBJECT MODULE PLACED IN .\Output\HC89F30xC_ISR.obj
COMPILER INVOKED BY: F:\KEIL5\C51\BIN\C51.EXE ..\..\User\C\HC89F30xC_ISR.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Applica
                    -tion;..\..\User\INC;..\..\Libraries;..\..\Application\Buzzer_Driver;..\..\Application;..\..\Application\DISPLAY;..\..\Ap
                    -plication\TM1652;..\..\Application\WDT;..\..\Application\TIMER;..\..\Application\EEPROM_R_W;..\..\Application\AD_WORK;..
                    -\..\Application\Fun_Handle;..\..\Application\KEY;..\..\Application\USART;..\..\Application\RS485-Modbus) DEBUG OBJECTEXT
                    -END PRINT(.\List\HC89F30xC_ISR.lst) OBJECT(.\Output\HC89F30xC_ISR.obj)

line level    source

   1          /******************* (C) COPYRIGHT 2009~2021 holychip **************************
   2          * File Name          : HC89F30xC_ISR.c
   3          ********************************************************************************
   4          
   5          
   6          *******************************************************************************/
   7          #include "define.h"
   8          
   9          
  10          //================================================================================
  11          extern void CTK_ISR_Handle(void);
  12          
  13          /****************************************************************************
  14          * Function Name  : ISR_CTK
  15          * Description    : CTK interrupt request
  16          * Input          : None
  17          * Output         : None
  18          * Return         : None
  19          ****************************************************************************/
  20          
  21          void ISR_CTK(void)      interrupt CTK_VECTOR
  22          {
  23   1                      CTK_ISR_Handle();
  24   1      }
  25          /****************************************************************************
  26          * Function Name  : ISR_Timer0
  27          * Description    : Timer0 interrupt request
  28          * Input          : None
  29          * Output         : None
  30          * Return         : None
  31          ****************************************************************************/
  32          void ISR_Timer0(void)     interrupt TIMER0_VECTOR
  33          {
  34   1          //TIMR0_ISR_Handle();
  35   1      }
  36          /****************************************************************************
  37          * Function Name  : ISR_Timer1
  38          * Description    : Timer1 interrupt request
  39          * Input          : None
  40          * Output         : None
  41          * Return         : None
  42          ****************************************************************************/
  43          void ISR_Timer1(void)     interrupt TIMER1_VECTOR
  44          {
  45   1          TIMR1_ISR_Handle();
  46   1      }
  47          //---------------------------------------------------------------------------
  48          void UART1_Rpt(void) interrupt UART1_VECTOR
  49          {
  50   1              if(SCON&0x01)                                           //判断接收中断标志位
  51   1              {
C51 COMPILER V9.00   HC89F30XC_ISR                                                         04/18/2024 20:31:02 PAGE 2   

  52   2                              SCON &=~ 0x01;                                  //清除接收中断标志位
  53   2                  if(USE_RS485 == 0)
  54   2                  {
  55   3                      Receiveflag = 1;
  56   3                      Receietime = 0;
  57   3                      ReceivebeBuffer[Receivenum] = SBUF;
  58   3                      Receivenum++;
  59   3                  }
  60   2                  else
  61   2                  {
  62   3                      if(USART_RX_CNT < USART_RX_MAX)  //接收到的字节 小于 设置的最大缓存区
  63   3                      {
  64   4                          USART_RX_CNT++;
  65   4                          USART_RX_BUF[USART_RX_CNT] = SBUF;
  66   4                      }
  67   3                  }
  68   2                              
  69   2              }       
  70   1      }
  71          
  72          
  73          /*********************************END OF FILE************************************/
  74          /******************* (C) COPYRIGHT 2009~2021 holychip ***************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    167    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
