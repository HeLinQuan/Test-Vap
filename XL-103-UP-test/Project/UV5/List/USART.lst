C51 COMPILER V9.00   USART                                                                 04/18/2024 20:31:04 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE USART
OBJECT MODULE PLACED IN .\Output\USART.obj
COMPILER INVOKED BY: F:\KEIL5\C51\BIN\C51.EXE ..\..\Application\USART\USART.C OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Appl
                    -ication;..\..\User\INC;..\..\Libraries;..\..\Application\Buzzer_Driver;..\..\Application;..\..\Application\DISPLAY;..\..
                    -\Application\TM1652;..\..\Application\WDT;..\..\Application\TIMER;..\..\Application\EEPROM_R_W;..\..\Application\AD_WORK
                    -;..\..\Application\Fun_Handle;..\..\Application\KEY;..\..\Application\USART;..\..\Application\RS485-Modbus) DEBUG OBJECT
                    -EXTEND PRINT(.\List\USART.lst) OBJECT(.\Output\USART.obj)

line level    source

   1          #include "define.h"
   2          unsigned char xdata SendOutData[16] = {0x55,0xAA,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
   3          unsigned char xdata ReceivebeBuffer[16] = {0x00,0x00,0x00,0x00};                //接收缓存器
   4          unsigned char Receiveflag = 0;                                                          //接收标志位
   5          unsigned char Receietime = 0;                                                                   //接收时间
   6          unsigned char Receivenum = 0;                                                                   //接收数目
   7          
   8          bit F_WORK;
   9          unsigned char F_BUZ;
  10          
  11          volatile unsigned char xdata ReceiveLimitFlag = 0;                                                      //接收限制标志位
  12          volatile unsigned int xdata ReceiveLimitCount = 0;                                                      //接收限制计数
  13          
  14          
  15          unsigned char WENBIAO_value ,START_value  , WORK_value  ,YURE_value; 
  16          
  17          
  18          //unsigned int  xdata KAOLU_temp,KEY_VALUE,F_OVER;
  19          //unsigned int  xdata F_30min,beep=0,beep1=0,beep2=0;
  20          
  21          
  22          void UartInit()                 //uart初始化
  23          {
  24   1              /**********************************UART配置初始化**************************************/
  25   1              
  26   1          P1M6 = GPIO_Out_PP ;      //RXD      设置为上拉输入
  27   1              P1M7 = GPIO_In_PU ;    // TXD       设置为推挽输出
  28   1              
  29   1              TXD_MAP =0x16 ;                                                 //TXD映射P
  30   1              RXD_MAP =0x17 ;                                                 //RXD映射P
  31   1          
  32   1              T4CON = 0x06;                                                           //T4工作模式：UART1波特率发生器
  33   1              //波特率计算
  34   1              //波特率 = 1/16 * (T4时钟源频率 / 定时器4预分频比) / (65536 - 0xFF98)
  35   1              //       = 1/16 * ((16000000 / 1) / 104)
  36   1              //               = 9615.38(误差0.16%)
  37   1      
  38   1              //波特率9600
  39   1              //反推初值 = (65536 - ((T4时钟源频率 / 定时器4预分频比) * (1 / 16)) / 波特率)
  40   1              //                 = (65536 - (16000000 * (1 / 16) / 9600))
  41   1              //                 = (65536 - 104.167)
  42   1              //         = FF98
  43   1          TH4 = 0xFF;
  44   1              TL4 = 0x98;                                                     //波特率9600
  45   1              SCON2 = 0x02;                                           //8位UART，波特率可变
  46   1              SCON = 0x10;                                            //允许串行接收
  47   1              IE |= 0x10;                                                     //使能串口中断
  48   1              EA = 1;                                                           //使能总中断
  49   1      }
  50          
  51          
C51 COMPILER V9.00   USART                                                                 04/18/2024 20:31:04 PAGE 2   

  52          //发送一个字节
  53          void UART_SendChar(unsigned char UART_da)
  54          {
  55   1                  SBUF = UART_da;                                             //发送8位串口数据
  56   1                      while(!(SCON & 0x02));              //SCON & 0x02  == TI
  57   1                      SCON &=~ 0x02;                                          //清除发送中断标志位
  58   1      }
  59          
  60          void  UART_SendData(unsigned char  len0)
  61          {
  62   1          unsigned char i;
  63   1                      for(i=0;i<len0;i++)
  64   1                      {
  65   2                                      UART_SendChar(SendOutData[i]);  
  66   2                      }
  67   1      }
  68          
  69          
  70           void JudgeOneStringEnd()                                       //判断一帧数据结束
  71          {
  72   1              if(Receiveflag == 1 && Receietime == 3)         //3             
  73   1              { 
  74   2                              JudgeTheReceiveData(ReceivebeBuffer,Receivenum);
  75   2                              ClearBuffer();
  76   2              }
  77   1      }
  78          
  79          unsigned char JudgeTheReceiveData(unsigned char *da,unsigned char num)                  //判断接收的数据是否正确
  80          {
  81   1                      unsigned char  num_data, i ;
  82   1                  num_data = num;
  83   1                      num_data = 0 ;
  84   1                      for(i=2 ; i<11 ; i++)
  85   1                      {
  86   2                               num_data += *(da+i);
  87   2                      }
  88   1      
  89   1                      if((*da == 0X55) &&(*(da+1) == 0XAA)&&(num_data == *(da+11)))//头码、校验码正确
  90   1                      {
  91   2                    F_FilterSet= (*(da+2)) ;
  92   2                    Filter_SetMode = (*(da+3));
  93   2                    F_Power = (*(da+6));
  94   2                    return Success;
  95   2                      }
  96   1                      else
  97   1                      {
  98   2                               return Fail;
  99   2                      }
 100   1      }
 101          
 102          void ClearBuffer()                                                                                                      //清空缓存器
 103          {
 104   1              unsigned char i = 0;
 105   1              for(i=0; i<50; i++)
 106   1              {       
 107   2                      ReceivebeBuffer[i] = 0;
 108   2              }
 109   1              Receiveflag = 0;
 110   1              Receietime  = 0;
 111   1              Receivenum  = 0;
 112   1      }
 113          void DIS_TO_MAIN_SEND(void)
C51 COMPILER V9.00   USART                                                                 04/18/2024 20:31:04 PAGE 3   

 114          {
 115   1                unsigned char x , num_data ;  
 116   1                      SendOutData[0] = 0X55 ; 
 117   1                      SendOutData[1] = 0XAA ;                                                                         
 118   1                  SendOutData[2] = F_FilterSet; 
 119   1                      SendOutData[3] = Filter_SetMode; 
 120   1                      SendOutData[4] = 0X00;
 121   1                      SendOutData[5] = TDS_RO_avg;
 122   1                      SendOutData[6] = F_Power; 
 123   1                      SendOutData[7] = F_FilterOutTime;
 124   1                      SendOutData[8] = 0X00 ;
 125   1                  SendOutData[9] = 0X00 ;
 126   1                      SendOutData[10]= 0X00 ;
 127   1                      num_data = 0 ; 
 128   1                      for(x=2 ; x<11 ; x++)
 129   1                      {
 130   2                              num_data += SendOutData[x] ;
 131   2                      }
 132   1                      SendOutData[11]= num_data ; 
 133   1                      UART_SendData(12) ;
 134   1      }
 135          
 136          void SingReceive(void)
 137          {
 138   1          if(ReceiveLimitFlag == 1)
 139   1          {
 140   2                  ReceiveLimitCount++;
 141   2                  if(ReceiveLimitCount==100)
 142   2                  {
 143   3                      ReceiveLimitFlag = 0;
 144   3                      ReceiveLimitCount = 0;
 145   3                  }
 146   2          }
 147   1      
 148   1          if(Receiveflag == 1)        //串口接收一帧数据判断
 149   1          {
 150   2                  Receietime++;
 151   2                  if(Receietime>=6)
 152   2                  {
 153   3                      ReceiveLimitFlag = 1;
 154   3                      Receietime = 6;
 155   3                  }
 156   2          }
 157   1      }
 158          
 159          
 160          
 161          
 162          
 163          
 164          /*
 165          
 166          
 167          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    365    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     35    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       3
C51 COMPILER V9.00   USART                                                                 04/18/2024 20:31:04 PAGE 4   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
